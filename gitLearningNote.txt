创建一个版本库非常简单，首先，选择一个合适的地方，创建一个空目录：

$ mkdir test （生成文件夹）
$ cd test
$ pwd
/c/Users/myStar/Desktop/test

touch test.txt  生成文本文档
pwd命令用于显示当前目录

----------------------------------------------------------------------------
初始化一个Git仓库，使用git init命令。

添加文件到Git仓库，分两步：

使用命令git add <file>，注意，可反复多次使用，添加多个文件；
使用命令git commit -m <message>，完成。

工作区 -> 暂存区 -> 分支
.git 是版本库
git add 将文件放到暂存区
git commit -m 将文件提交到分支
-----------------------------------------------------------------------------

git checkout -- fileName 丢弃工作目录中的更改

git status 时刻掌握仓库当前的状态

git diff 查看修改的内容

git log 显示从最近到最远的提交日志
git log --pretty=oneline （使提示更简洁）

git reflog	查看命令历史

git reset --hard HEAD 返回到最近的版本
git reset --hard 版本号 返回到指定版本

场景1：当你改乱了工作区某个文件的内容，想直接丢弃工作区的修改时，用命令git checkout -- file。

场景2：当你不但改乱了工作区某个文件的内容，还添加到了暂存区时，想丢弃修改，分两步，第一步用命令git reset HEAD <file>，就回到了场景1，第二步按场景1操作。

git rm用于删除一个文件。如果一个文件已经被提交到版本库，那么你永远不用担心误删，但是要小心，你只能恢复文件到最新版本，你会丢失最近一次提交后你修改的内容

git merge 合并

git stash 存储
工作区是干净的，刚才的工作现场存到哪去了？用git stash list命令看看：

$ git stash list
stash@{0}: WIP on dev: f52c633 add merge
工作现场还在，Git把stash内容存在某个地方了，但是需要恢复一下，有两个办法：

一是用git stash apply恢复，但是恢复后，stash内容并不删除，你需要用git stash drop来删除；

另一种方式是用git stash pop，恢复的同时把stash内容也删了：


: + q 退出

参考网址：https://www.liaoxuefeng.com/wiki/0013739516305929606dd18361248578c67b8067c8c017b000


在本机上生成SSH秘钥，然后在github-setting上配置SSH秘钥，这样就能git clone SSH的地址
配置SSH是因为github要验证传输者的身份，即是哪台电脑上传输的